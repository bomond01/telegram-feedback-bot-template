import os
from dotenv import load_dotenv
from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    CallbackQueryHandler,
    ContextTypes,
    filters,
)

load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")
ADMIN_IDS = [494860919, 818906596]

CATEGORY_KEYBOARD = [
    [InlineKeyboardButton("üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ", callback_data="category_–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ")],
    [InlineKeyboardButton("üö® –ñ–∞–ª–æ–±–∞", callback_data="category_–ñ–∞–ª–æ–±–∞")],
    [InlineKeyboardButton("‚ùì –í–æ–ø—Ä–æ—Å", callback_data="category_–í–æ–ø—Ä–æ—Å")],
]

user_categories = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –æ–±—Ä–∞—â–µ–Ω–∏—è:",
        reply_markup=InlineKeyboardMarkup(CATEGORY_KEYBOARD)
    )

async def handle_category(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    category = query.data.split("_", 1)[1]
    user_categories[query.from_user.id] = category
    await query.edit_message_text(f"‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è –≤—ã–±—Ä–∞–Ω–∞: {category}\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ñ–æ—Ç–æ –∏–ª–∏ —Ñ–∞–π–ª.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    category = user_categories.get(user_id, "–ë–µ–∑ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏")

    for admin_id in ADMIN_IDS:
        if update.message.text:
            await context.bot.send_message(
                chat_id=admin_id,
                text=f"üì¨ –ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}\n–û—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @{update.effective_user.username or user_id}:\n\n{update.message.text}"
            )
        if update.message.photo:
            await context.bot.send_photo(
                chat_id=admin_id,
                photo=update.message.photo[-1].file_id,
                caption=f"üì∑ –§–æ—Ç–æ –æ—Ç @{update.effective_user.username or user_id}\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}"
            )
        if update.message.video:
            await context.bot.send_video(
                chat_id=admin_id,
                video=update.message.video.file_id,
                caption=f"üé• –í–∏–¥–µ–æ –æ—Ç @{update.effective_user.username or user_id}\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}"
            )
        if update.message.document:
            await context.bot.send_document(
                chat_id=admin_id,
                document=update.message.document.file_id,
                caption=f"üìé –§–∞–π–ª –æ—Ç @{update.effective_user.username or user_id}\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {category}"
            )

    await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.")

def main():
    app = ApplicationBuilder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(handle_category, pattern="^category_"))
    app.add_handler(MessageHandler(filters.ALL & ~filters.COMMAND, handle_message))
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if __name__ == "__main__":
    main()